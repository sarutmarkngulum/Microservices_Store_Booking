// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: dashboard.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request และ Response สำหรับข้อมูลสรุปรายวัน
type GetDailySummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailySales     float64 `protobuf:"fixed64,1,opt,name=daily_sales,json=dailySales,proto3" json:"daily_sales,omitempty"`            // ยอดขายรายวัน (float64)
	DailyBookings  int32   `protobuf:"varint,2,opt,name=daily_bookings,json=dailyBookings,proto3" json:"daily_bookings,omitempty"`    // ยอดจองวันนี้
	DailyCustomers int32   `protobuf:"varint,3,opt,name=daily_customers,json=dailyCustomers,proto3" json:"daily_customers,omitempty"` // จำนวนลูกค้าเข้ารายวัน
	TotalUsers     int32   `protobuf:"varint,4,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`             // จำนวนผู้ใช้ในระบบทั้งหมด
}

func (x *GetDailySummaryResponse) Reset() {
	*x = GetDailySummaryResponse{}
	mi := &file_dashboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailySummaryResponse) ProtoMessage() {}

func (x *GetDailySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailySummaryResponse.ProtoReflect.Descriptor instead.
func (*GetDailySummaryResponse) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *GetDailySummaryResponse) GetDailySales() float64 {
	if x != nil {
		return x.DailySales
	}
	return 0
}

func (x *GetDailySummaryResponse) GetDailyBookings() int32 {
	if x != nil {
		return x.DailyBookings
	}
	return 0
}

func (x *GetDailySummaryResponse) GetDailyCustomers() int32 {
	if x != nil {
		return x.DailyCustomers
	}
	return 0
}

func (x *GetDailySummaryResponse) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

// Request และ Response สำหรับกราฟยอดขายรายเดือน/ปี
type GetMonthlySalesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sales []*MonthlySales `protobuf:"bytes,1,rep,name=sales,proto3" json:"sales,omitempty"` // ข้อมูลยอดขายรายเดือน
}

func (x *GetMonthlySalesResponse) Reset() {
	*x = GetMonthlySalesResponse{}
	mi := &file_dashboard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthlySalesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySalesResponse) ProtoMessage() {}

func (x *GetMonthlySalesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySalesResponse.ProtoReflect.Descriptor instead.
func (*GetMonthlySalesResponse) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *GetMonthlySalesResponse) GetSales() []*MonthlySales {
	if x != nil {
		return x.Sales
	}
	return nil
}

type MonthlySales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month      int32   `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`                              // เดือน (1-12)
	TotalSales float64 `protobuf:"fixed64,2,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"` // ยอดขายรวมของเดือนนั้น (float64)
}

func (x *MonthlySales) Reset() {
	*x = MonthlySales{}
	mi := &file_dashboard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlySales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlySales) ProtoMessage() {}

func (x *MonthlySales) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlySales.ProtoReflect.Descriptor instead.
func (*MonthlySales) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *MonthlySales) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *MonthlySales) GetTotalSales() float64 {
	if x != nil {
		return x.TotalSales
	}
	return 0
}

// Request และ Response สำหรับกราฟยอดจองและลูกค้ารายเดือน
type GetMonthlyBookingAndCustomersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*MonthlyBookingAndCustomers `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // ข้อมูลรายเดือน
}

func (x *GetMonthlyBookingAndCustomersResponse) Reset() {
	*x = GetMonthlyBookingAndCustomersResponse{}
	mi := &file_dashboard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthlyBookingAndCustomersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlyBookingAndCustomersResponse) ProtoMessage() {}

func (x *GetMonthlyBookingAndCustomersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlyBookingAndCustomersResponse.ProtoReflect.Descriptor instead.
func (*GetMonthlyBookingAndCustomersResponse) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *GetMonthlyBookingAndCustomersResponse) GetData() []*MonthlyBookingAndCustomers {
	if x != nil {
		return x.Data
	}
	return nil
}

type MonthlyBookingAndCustomers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month          int32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`                                         // เดือน (1-12)
	TotalBookings  int32 `protobuf:"varint,2,opt,name=total_bookings,json=totalBookings,proto3" json:"total_bookings,omitempty"`    // ยอดจองในเดือนนั้น
	TotalCustomers int32 `protobuf:"varint,3,opt,name=total_customers,json=totalCustomers,proto3" json:"total_customers,omitempty"` // จำนวนลูกค้าในเดือนนั้น
}

func (x *MonthlyBookingAndCustomers) Reset() {
	*x = MonthlyBookingAndCustomers{}
	mi := &file_dashboard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlyBookingAndCustomers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyBookingAndCustomers) ProtoMessage() {}

func (x *MonthlyBookingAndCustomers) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyBookingAndCustomers.ProtoReflect.Descriptor instead.
func (*MonthlyBookingAndCustomers) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *MonthlyBookingAndCustomers) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *MonthlyBookingAndCustomers) GetTotalBookings() int32 {
	if x != nil {
		return x.TotalBookings
	}
	return 0
}

func (x *MonthlyBookingAndCustomers) GetTotalCustomers() int32 {
	if x != nil {
		return x.TotalCustomers
	}
	return 0
}

// Request และ Response สำหรับเมนูขายดี
type GetBestSellersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopMenuSets []*MenuSets `protobuf:"bytes,1,rep,name=top_menu_sets,json=topMenuSets,proto3" json:"top_menu_sets,omitempty"`   // เมนูเซ็ตขายดี 5 อันดับแรก
	TopALaCarte []*Menu     `protobuf:"bytes,2,rep,name=top_a_la_carte,json=topALaCarte,proto3" json:"top_a_la_carte,omitempty"` // เมนู A La Carte ขายดี 5 อันดับแรก
}

func (x *GetBestSellersResponse) Reset() {
	*x = GetBestSellersResponse{}
	mi := &file_dashboard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestSellersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestSellersResponse) ProtoMessage() {}

func (x *GetBestSellersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestSellersResponse.ProtoReflect.Descriptor instead.
func (*GetBestSellersResponse) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *GetBestSellersResponse) GetTopMenuSets() []*MenuSets {
	if x != nil {
		return x.TopMenuSets
	}
	return nil
}

func (x *GetBestSellersResponse) GetTopALaCarte() []*Menu {
	if x != nil {
		return x.TopALaCarte
	}
	return nil
}

type MenuSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSetName       string `protobuf:"bytes,1,opt,name=name_set_name,json=nameSetName,proto3" json:"name_set_name,omitempty"`                    // ชื่อเซตเมนู
	TotalQuantitySold int32  `protobuf:"varint,2,opt,name=total_quantity_sold,json=totalQuantitySold,proto3" json:"total_quantity_sold,omitempty"` // จำนวนที่ขายได้ทั้งหมด
}

func (x *MenuSets) Reset() {
	*x = MenuSets{}
	mi := &file_dashboard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSets) ProtoMessage() {}

func (x *MenuSets) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSets.ProtoReflect.Descriptor instead.
func (*MenuSets) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *MenuSets) GetNameSetName() string {
	if x != nil {
		return x.NameSetName
	}
	return ""
}

func (x *MenuSets) GetTotalQuantitySold() int32 {
	if x != nil {
		return x.TotalQuantitySold
	}
	return 0
}

type Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameTh            string `protobuf:"bytes,1,opt,name=name_th,json=nameTh,proto3" json:"name_th,omitempty"`                                     // ชื่อเมนู (ภาษาไทย)
	NameEn            string `protobuf:"bytes,2,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                                     // ชื่อเมนู (ภาษาอังกฤษ)
	ImageUrl          string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                               // ลิงก์ภาพของเมนู
	TotalQuantitySold int32  `protobuf:"varint,4,opt,name=total_quantity_sold,json=totalQuantitySold,proto3" json:"total_quantity_sold,omitempty"` // จำนวนที่ขายได้ทั้งหมด
}

func (x *Menu) Reset() {
	*x = Menu{}
	mi := &file_dashboard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *Menu) GetNameTh() string {
	if x != nil {
		return x.NameTh
	}
	return ""
}

func (x *Menu) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *Menu) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Menu) GetTotalQuantitySold() int32 {
	if x != nil {
		return x.TotalQuantitySold
	}
	return 0
}

var File_dashboard_proto protoreflect.FileDescriptor

var file_dashboard_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x22,
	0x45, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x22, 0x85,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x74, 0x6f, 0x70,
	0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x53, 0x65, 0x74, 0x73, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74,
	0x73, 0x12, 0x33, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x5f, 0x6c, 0x61, 0x5f, 0x63, 0x61,
	0x72, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x41, 0x4c,
	0x61, 0x43, 0x61, 0x72, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x53, 0x6f, 0x6c, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e,
	0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x6c, 0x64, 0x32, 0xe4,
	0x02, 0x0a, 0x10, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x42, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dashboard_proto_rawDescOnce sync.Once
	file_dashboard_proto_rawDescData = file_dashboard_proto_rawDesc
)

func file_dashboard_proto_rawDescGZIP() []byte {
	file_dashboard_proto_rawDescOnce.Do(func() {
		file_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_dashboard_proto_rawDescData)
	})
	return file_dashboard_proto_rawDescData
}

var file_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dashboard_proto_goTypes = []any{
	(*GetDailySummaryResponse)(nil),               // 0: services.GetDailySummaryResponse
	(*GetMonthlySalesResponse)(nil),               // 1: services.GetMonthlySalesResponse
	(*MonthlySales)(nil),                          // 2: services.MonthlySales
	(*GetMonthlyBookingAndCustomersResponse)(nil), // 3: services.GetMonthlyBookingAndCustomersResponse
	(*MonthlyBookingAndCustomers)(nil),            // 4: services.MonthlyBookingAndCustomers
	(*GetBestSellersResponse)(nil),                // 5: services.GetBestSellersResponse
	(*MenuSets)(nil),                              // 6: services.MenuSets
	(*Menu)(nil),                                  // 7: services.Menu
	(*emptypb.Empty)(nil),                         // 8: google.protobuf.Empty
}
var file_dashboard_proto_depIdxs = []int32{
	2, // 0: services.GetMonthlySalesResponse.sales:type_name -> services.MonthlySales
	4, // 1: services.GetMonthlyBookingAndCustomersResponse.data:type_name -> services.MonthlyBookingAndCustomers
	6, // 2: services.GetBestSellersResponse.top_menu_sets:type_name -> services.MenuSets
	7, // 3: services.GetBestSellersResponse.top_a_la_carte:type_name -> services.Menu
	8, // 4: services.DashboardService.GetDailySummary:input_type -> google.protobuf.Empty
	8, // 5: services.DashboardService.GetMonthlySales:input_type -> google.protobuf.Empty
	8, // 6: services.DashboardService.GetMonthlyBookingAndCustomers:input_type -> google.protobuf.Empty
	8, // 7: services.DashboardService.GetBestSellers:input_type -> google.protobuf.Empty
	0, // 8: services.DashboardService.GetDailySummary:output_type -> services.GetDailySummaryResponse
	1, // 9: services.DashboardService.GetMonthlySales:output_type -> services.GetMonthlySalesResponse
	3, // 10: services.DashboardService.GetMonthlyBookingAndCustomers:output_type -> services.GetMonthlyBookingAndCustomersResponse
	5, // 11: services.DashboardService.GetBestSellers:output_type -> services.GetBestSellersResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_dashboard_proto_init() }
func file_dashboard_proto_init() {
	if File_dashboard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dashboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dashboard_proto_goTypes,
		DependencyIndexes: file_dashboard_proto_depIdxs,
		MessageInfos:      file_dashboard_proto_msgTypes,
	}.Build()
	File_dashboard_proto = out.File
	file_dashboard_proto_rawDesc = nil
	file_dashboard_proto_goTypes = nil
	file_dashboard_proto_depIdxs = nil
}
