// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: menu.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ---------------- Enum ------------------------
type MenuCategory int32

const (
	MenuCategory_UNKNOWN     MenuCategory = 0 // ค่าเริ่มต้นหรือค่าไม่รู้จัก
	MenuCategory_MAIN_COURSE MenuCategory = 1 // อาหารจานหลัก
	MenuCategory_BEVERAGE    MenuCategory = 2 // เครื่องดื่ม
	MenuCategory_DESSERT     MenuCategory = 3 // ของหวาน
)

// Enum value maps for MenuCategory.
var (
	MenuCategory_name = map[int32]string{
		0: "UNKNOWN",
		1: "MAIN_COURSE",
		2: "BEVERAGE",
		3: "DESSERT",
	}
	MenuCategory_value = map[string]int32{
		"UNKNOWN":     0,
		"MAIN_COURSE": 1,
		"BEVERAGE":    2,
		"DESSERT":     3,
	}
)

func (x MenuCategory) Enum() *MenuCategory {
	p := new(MenuCategory)
	*p = x
	return p
}

func (x MenuCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_proto_enumTypes[0].Descriptor()
}

func (MenuCategory) Type() protoreflect.EnumType {
	return &file_menu_proto_enumTypes[0]
}

func (x MenuCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuCategory.Descriptor instead.
func (MenuCategory) EnumDescriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_SUCCESS Status = 0 // สำเร็จ
	Status_FAILURE Status = 1 // ล้มเหลว
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
	}
	Status_value = map[string]int32{
		"SUCCESS": 0,
		"FAILURE": 1,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_menu_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{1}
}

// ---------------- Menu ------------------------
type MenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // ID ของเมนู
	NameTh      string       `protobuf:"bytes,2,opt,name=name_th,json=nameTh,proto3" json:"name_th,omitempty"`                   // ชื่อเมนูภาษาไทย
	NameEn      string       `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                   // ชื่อเมนูภาษาอังกฤษ
	Description string       `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                       // รายละเอียดของเมนู
	Price       float64      `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`                                 // ราคาของเมนู
	Category    MenuCategory `protobuf:"varint,6,opt,name=category,proto3,enum=services.MenuCategory" json:"category,omitempty"` // ประเภทของเมนู (เช่น อาหารจานหลัก, เครื่องดื่ม)
	ImageUrl    string       `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`             // URL รูปภาพของเมนู
}

func (x *MenuItem) Reset() {
	*x = MenuItem{}
	mi := &file_menu_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItem) ProtoMessage() {}

func (x *MenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItem.ProtoReflect.Descriptor instead.
func (*MenuItem) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{0}
}

func (x *MenuItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MenuItem) GetNameTh() string {
	if x != nil {
		return x.NameTh
	}
	return ""
}

func (x *MenuItem) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *MenuItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MenuItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MenuItem) GetCategory() MenuCategory {
	if x != nil {
		return x.Category
	}
	return MenuCategory_UNKNOWN
}

func (x *MenuItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// List Menu
type MenuItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuItems []*MenuItem `protobuf:"bytes,1,rep,name=menu_items,json=menuItems,proto3" json:"menu_items,omitempty"` // รายการของเมนูทั้งหมด
}

func (x *MenuItemList) Reset() {
	*x = MenuItemList{}
	mi := &file_menu_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItemList) ProtoMessage() {}

func (x *MenuItemList) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItemList.ProtoReflect.Descriptor instead.
func (*MenuItemList) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{1}
}

func (x *MenuItemList) GetMenuItems() []*MenuItem {
	if x != nil {
		return x.MenuItems
	}
	return nil
}

// Create New Menu
type CreateMenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameTh      string       `protobuf:"bytes,1,opt,name=name_th,json=nameTh,proto3" json:"name_th,omitempty"`                   // ชื่อเมนูภาษาไทย
	NameEn      string       `protobuf:"bytes,2,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                   // ชื่อเมนูภาษาอังกฤษ
	Price       float64      `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                                 // ราคาของเมนู
	Description string       `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                       // รายละเอียดของเมนู
	Category    MenuCategory `protobuf:"varint,5,opt,name=category,proto3,enum=services.MenuCategory" json:"category,omitempty"` // ประเภทของเมนู
	ImageData   []byte       `protobuf:"bytes,6,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`          // ข้อมูลไฟล์รูปภาพของเมนู
}

func (x *CreateMenuItemRequest) Reset() {
	*x = CreateMenuItemRequest{}
	mi := &file_menu_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuItemRequest) ProtoMessage() {}

func (x *CreateMenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuItemRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuItemRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMenuItemRequest) GetNameTh() string {
	if x != nil {
		return x.NameTh
	}
	return ""
}

func (x *CreateMenuItemRequest) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *CreateMenuItemRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateMenuItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMenuItemRequest) GetCategory() MenuCategory {
	if x != nil {
		return x.Category
	}
	return MenuCategory_UNKNOWN
}

func (x *CreateMenuItemRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type CreateMenuItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                               // ID ของเมนูที่ถูกสร้าง
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะของการสร้างเมนู
}

func (x *CreateMenuItemResponse) Reset() {
	*x = CreateMenuItemResponse{}
	mi := &file_menu_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMenuItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuItemResponse) ProtoMessage() {}

func (x *CreateMenuItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuItemResponse.ProtoReflect.Descriptor instead.
func (*CreateMenuItemResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMenuItemResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateMenuItemResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Update Menu
type UpdateMenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // ID ของเมนูที่ต้องการอัปเดต
	NameTh      string       `protobuf:"bytes,2,opt,name=name_th,json=nameTh,proto3" json:"name_th,omitempty"`                   // ชื่อเมนูภาษาไทย
	NameEn      string       `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                   // ชื่อเมนูภาษาอังกฤษ
	Description string       `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                       // รายละเอียดของเมนู
	Price       float64      `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`                                 // ราคาของเมนู
	Category    MenuCategory `protobuf:"varint,6,opt,name=category,proto3,enum=services.MenuCategory" json:"category,omitempty"` // ประเภทของเมนู
	ImageData   []byte       `protobuf:"bytes,7,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`          // URL รูปภาพของเมนู
}

func (x *UpdateMenuItemRequest) Reset() {
	*x = UpdateMenuItemRequest{}
	mi := &file_menu_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuItemRequest) ProtoMessage() {}

func (x *UpdateMenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenuItemRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateMenuItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetNameTh() string {
	if x != nil {
		return x.NameTh
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateMenuItemRequest) GetCategory() MenuCategory {
	if x != nil {
		return x.Category
	}
	return MenuCategory_UNKNOWN
}

func (x *UpdateMenuItemRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type UpdateMenuItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการอัปเดต (สำเร็จ/ล้มเหลว)
}

func (x *UpdateMenuItemResponse) Reset() {
	*x = UpdateMenuItemResponse{}
	mi := &file_menu_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMenuItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuItemResponse) ProtoMessage() {}

func (x *UpdateMenuItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateMenuItemResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMenuItemResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Delete Menu
type DeleteMenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID ของเมนูที่ต้องการลบ
}

func (x *DeleteMenuItemRequest) Reset() {
	*x = DeleteMenuItemRequest{}
	mi := &file_menu_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuItemRequest) ProtoMessage() {}

func (x *DeleteMenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenuItemRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteMenuItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteMenuItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะของการลบเมนู (สำเร็จ/ล้มเหลว)
}

func (x *DeleteMenuItemResponse) Reset() {
	*x = DeleteMenuItemResponse{}
	mi := &file_menu_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMenuItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuItemResponse) ProtoMessage() {}

func (x *DeleteMenuItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteMenuItemResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMenuItemResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

type GetMenuItemByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *GetMenuItemByIdRequest) Reset() {
	*x = GetMenuItemByIdRequest{}
	mi := &file_menu_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMenuItemByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuItemByIdRequest) ProtoMessage() {}

func (x *GetMenuItemByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuItemByIdRequest.ProtoReflect.Descriptor instead.
func (*GetMenuItemByIdRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{8}
}

func (x *GetMenuItemByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ---------------- Menu Set ------------------------
type MenuSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // ID ของเซตเมนู
	Name  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     // ชื่อของเซตเมนู
	Price float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"` // ราคาของเซตเมนู
}

func (x *MenuSet) Reset() {
	*x = MenuSet{}
	mi := &file_menu_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSet) ProtoMessage() {}

func (x *MenuSet) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSet.ProtoReflect.Descriptor instead.
func (*MenuSet) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{9}
}

func (x *MenuSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MenuSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuSet) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// List Menu Set
type MenuSetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSets []*MenuSet `protobuf:"bytes,1,rep,name=menu_sets,json=menuSets,proto3" json:"menu_sets,omitempty"` // รายการของเซตเมนูทั้งหมด
}

func (x *MenuSetList) Reset() {
	*x = MenuSetList{}
	mi := &file_menu_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuSetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSetList) ProtoMessage() {}

func (x *MenuSetList) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSetList.ProtoReflect.Descriptor instead.
func (*MenuSetList) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{10}
}

func (x *MenuSetList) GetMenuSets() []*MenuSet {
	if x != nil {
		return x.MenuSets
	}
	return nil
}

// Create New Menu Set
type CreateMenuSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`     // ชื่อของเซตเมนู
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"` // ราคาของเซตเมนู
}

func (x *CreateMenuSetRequest) Reset() {
	*x = CreateMenuSetRequest{}
	mi := &file_menu_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMenuSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuSetRequest) ProtoMessage() {}

func (x *CreateMenuSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuSetRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuSetRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{11}
}

func (x *CreateMenuSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMenuSetRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateMenuSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                               // ID ของเซตเมนูที่ถูกสร้าง
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะของการสร้างเซตเมนู (สำเร็จ/ล้มเหลว)
}

func (x *CreateMenuSetResponse) Reset() {
	*x = CreateMenuSetResponse{}
	mi := &file_menu_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMenuSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuSetResponse) ProtoMessage() {}

func (x *CreateMenuSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuSetResponse.ProtoReflect.Descriptor instead.
func (*CreateMenuSetResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{12}
}

func (x *CreateMenuSetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateMenuSetResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Update Menu Set
type UpdateMenuSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // ID ของเซตเมนูที่ต้องการอัปเดต
	Name  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     // ชื่อของเซตเมนู
	Price float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"` // ราคาของเซตเมนู
}

func (x *UpdateMenuSetRequest) Reset() {
	*x = UpdateMenuSetRequest{}
	mi := &file_menu_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMenuSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuSetRequest) ProtoMessage() {}

func (x *UpdateMenuSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuSetRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenuSetRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateMenuSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMenuSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMenuSetRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateMenuSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการอัปเดต (สำเร็จ/ล้มเหลว)
}

func (x *UpdateMenuSetResponse) Reset() {
	*x = UpdateMenuSetResponse{}
	mi := &file_menu_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMenuSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuSetResponse) ProtoMessage() {}

func (x *UpdateMenuSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuSetResponse.ProtoReflect.Descriptor instead.
func (*UpdateMenuSetResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateMenuSetResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Delete Menu Set
type DeleteMenuSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID ของเซตเมนูที่ต้องการลบ
}

func (x *DeleteMenuSetRequest) Reset() {
	*x = DeleteMenuSetRequest{}
	mi := &file_menu_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMenuSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuSetRequest) ProtoMessage() {}

func (x *DeleteMenuSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuSetRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenuSetRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMenuSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteMenuSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการลบเซตเมนู (สำเร็จ/ล้มเหลว)
}

func (x *DeleteMenuSetResponse) Reset() {
	*x = DeleteMenuSetResponse{}
	mi := &file_menu_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMenuSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuSetResponse) ProtoMessage() {}

func (x *DeleteMenuSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuSetResponse.ProtoReflect.Descriptor instead.
func (*DeleteMenuSetResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteMenuSetResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

type GetMenuSetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *GetMenuSetByIdRequest) Reset() {
	*x = GetMenuSetByIdRequest{}
	mi := &file_menu_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMenuSetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuSetByIdRequest) ProtoMessage() {}

func (x *GetMenuSetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuSetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetMenuSetByIdRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{17}
}

func (x *GetMenuSetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ---------------- Menu Set Item ------------------------
// Create New Menu Set Item
type CreateMenuSetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSetId  string   `protobuf:"bytes,1,opt,name=menu_set_id,json=menuSetId,proto3" json:"menu_set_id,omitempty"`    // ID ของเซตเมนู
	MenuItemId []string `protobuf:"bytes,2,rep,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"` // รายการ ID ของเมนูในเซต
}

func (x *CreateMenuSetItemRequest) Reset() {
	*x = CreateMenuSetItemRequest{}
	mi := &file_menu_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMenuSetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuSetItemRequest) ProtoMessage() {}

func (x *CreateMenuSetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuSetItemRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuSetItemRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{18}
}

func (x *CreateMenuSetItemRequest) GetMenuSetId() string {
	if x != nil {
		return x.MenuSetId
	}
	return ""
}

func (x *CreateMenuSetItemRequest) GetMenuItemId() []string {
	if x != nil {
		return x.MenuItemId
	}
	return nil
}

type CreateMenuSetItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการเพิ่มเมนูในเซต (สำเร็จ/ล้มเหลว)
}

func (x *CreateMenuSetItemResponse) Reset() {
	*x = CreateMenuSetItemResponse{}
	mi := &file_menu_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMenuSetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuSetItemResponse) ProtoMessage() {}

func (x *CreateMenuSetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuSetItemResponse.ProtoReflect.Descriptor instead.
func (*CreateMenuSetItemResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{19}
}

func (x *CreateMenuSetItemResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Get Menu Set Items
type GetMenuSetItemByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSetId string `protobuf:"bytes,1,opt,name=menu_set_id,json=menuSetId,proto3" json:"menu_set_id,omitempty"` // ID ของเซตเมนู
}

func (x *GetMenuSetItemByIdRequest) Reset() {
	*x = GetMenuSetItemByIdRequest{}
	mi := &file_menu_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMenuSetItemByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuSetItemByIdRequest) ProtoMessage() {}

func (x *GetMenuSetItemByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuSetItemByIdRequest.ProtoReflect.Descriptor instead.
func (*GetMenuSetItemByIdRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{20}
}

func (x *GetMenuSetItemByIdRequest) GetMenuSetId() string {
	if x != nil {
		return x.MenuSetId
	}
	return ""
}

type MenuSetItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSetItems []*MenuSetItem `protobuf:"bytes,1,rep,name=menu_set_items,json=menuSetItems,proto3" json:"menu_set_items,omitempty"` // รายการของ MenuSetItem
}

func (x *MenuSetItemList) Reset() {
	*x = MenuSetItemList{}
	mi := &file_menu_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuSetItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSetItemList) ProtoMessage() {}

func (x *MenuSetItemList) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSetItemList.ProtoReflect.Descriptor instead.
func (*MenuSetItemList) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{21}
}

func (x *MenuSetItemList) GetMenuSetItems() []*MenuSetItem {
	if x != nil {
		return x.MenuSetItems
	}
	return nil
}

// Update Menu Set Item
type UpdateMenuSetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSetId  string   `protobuf:"bytes,1,opt,name=menu_set_id,json=menuSetId,proto3" json:"menu_set_id,omitempty"`    // ID ของเซตเมนู
	MenuItemId []string `protobuf:"bytes,2,rep,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"` // รายการของ ID เมนูที่ต้องการอัปเดตในเซต
}

func (x *UpdateMenuSetItemRequest) Reset() {
	*x = UpdateMenuSetItemRequest{}
	mi := &file_menu_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMenuSetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuSetItemRequest) ProtoMessage() {}

func (x *UpdateMenuSetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuSetItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenuSetItemRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateMenuSetItemRequest) GetMenuSetId() string {
	if x != nil {
		return x.MenuSetId
	}
	return ""
}

func (x *UpdateMenuSetItemRequest) GetMenuItemId() []string {
	if x != nil {
		return x.MenuItemId
	}
	return nil
}

type UpdateMenuSetItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการอัปเดตเมนูในเซต (สำเร็จ/ล้มเหลว)
}

func (x *UpdateMenuSetItemResponse) Reset() {
	*x = UpdateMenuSetItemResponse{}
	mi := &file_menu_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMenuSetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuSetItemResponse) ProtoMessage() {}

func (x *UpdateMenuSetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuSetItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateMenuSetItemResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateMenuSetItemResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Delete Menu Set Item
type DeleteMenuSetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSetId string `protobuf:"bytes,1,opt,name=menu_set_id,json=menuSetId,proto3" json:"menu_set_id,omitempty"` // ID ของเซตเมนู
}

func (x *DeleteMenuSetItemRequest) Reset() {
	*x = DeleteMenuSetItemRequest{}
	mi := &file_menu_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMenuSetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuSetItemRequest) ProtoMessage() {}

func (x *DeleteMenuSetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuSetItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenuSetItemRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteMenuSetItemRequest) GetMenuSetId() string {
	if x != nil {
		return x.MenuSetId
	}
	return ""
}

type DeleteMenuSetItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการลบเมนูออกจากเซต (สำเร็จ/ล้มเหลว)
}

func (x *DeleteMenuSetItemResponse) Reset() {
	*x = DeleteMenuSetItemResponse{}
	mi := &file_menu_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMenuSetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuSetItemResponse) ProtoMessage() {}

func (x *DeleteMenuSetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuSetItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteMenuSetItemResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteMenuSetItemResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

type MenuSetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuSetId    string  `protobuf:"bytes,1,opt,name=menu_set_id,json=menuSetId,proto3" json:"menu_set_id,omitempty"`            // ID ของเซตเมนู
	MenuItemId   string  `protobuf:"bytes,2,opt,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"`         // ID ของเมนู
	MenuSetName  string  `protobuf:"bytes,3,opt,name=menu_set_name,json=menuSetName,proto3" json:"menu_set_name,omitempty"`      // ชื่อของเซตเมนู
	MenuSetPrice float32 `protobuf:"fixed32,4,opt,name=menu_set_price,json=menuSetPrice,proto3" json:"menu_set_price,omitempty"` // ราคาของเซตเมนู
	MenuNameTh   string  `protobuf:"bytes,5,opt,name=menu_name_th,json=menuNameTh,proto3" json:"menu_name_th,omitempty"`         // ชื่อเมนู (ภาษาไทย)
	MenuNameEn   string  `protobuf:"bytes,6,opt,name=menu_name_en,json=menuNameEn,proto3" json:"menu_name_en,omitempty"`         // ชื่อเมนู (ภาษาอังกฤษ)
	MenuPrice    float32 `protobuf:"fixed32,7,opt,name=menu_price,json=menuPrice,proto3" json:"menu_price,omitempty"`            // ราคาของเมนู
	MenuCategory string  `protobuf:"bytes,8,opt,name=menu_category,json=menuCategory,proto3" json:"menu_category,omitempty"`     // หมวดหมู่ของเมนู (เช่น MAIN_COURSE, BEVERAGE, DESSERT)
	ImageUrl     string  `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                 // URL ของภาพเมนู
}

func (x *MenuSetItem) Reset() {
	*x = MenuSetItem{}
	mi := &file_menu_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuSetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSetItem) ProtoMessage() {}

func (x *MenuSetItem) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSetItem.ProtoReflect.Descriptor instead.
func (*MenuSetItem) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{26}
}

func (x *MenuSetItem) GetMenuSetId() string {
	if x != nil {
		return x.MenuSetId
	}
	return ""
}

func (x *MenuSetItem) GetMenuItemId() string {
	if x != nil {
		return x.MenuItemId
	}
	return ""
}

func (x *MenuSetItem) GetMenuSetName() string {
	if x != nil {
		return x.MenuSetName
	}
	return ""
}

func (x *MenuSetItem) GetMenuSetPrice() float32 {
	if x != nil {
		return x.MenuSetPrice
	}
	return 0
}

func (x *MenuSetItem) GetMenuNameTh() string {
	if x != nil {
		return x.MenuNameTh
	}
	return ""
}

func (x *MenuSetItem) GetMenuNameEn() string {
	if x != nil {
		return x.MenuNameEn
	}
	return ""
}

func (x *MenuSetItem) GetMenuPrice() float32 {
	if x != nil {
		return x.MenuPrice
	}
	return 0
}

func (x *MenuSetItem) GetMenuCategory() string {
	if x != nil {
		return x.MenuCategory
	}
	return ""
}

func (x *MenuSetItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// Upload Img
type UploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageData []byte `protobuf:"bytes,1,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // ข้อมูลรูปภาพในรูปแบบ binary
	FileName  string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`    // ชื่อไฟล์
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	mi := &file_menu_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{27}
}

func (x *UploadImageRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *UploadImageRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type UploadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`   // URL ของรูปภาพที่อัปโหลดสำเร็จ
	Status   Status `protobuf:"varint,2,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะ (สำเร็จ/ล้มเหลว)
}

func (x *UploadImageResponse) Reset() {
	*x = UploadImageResponse{}
	mi := &file_menu_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageResponse) ProtoMessage() {}

func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.
func (*UploadImageResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{28}
}

func (x *UploadImageResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UploadImageResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Delete Img
type DeleteImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"` // URL ของรูปภาพที่ต้องการลบ
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	mi := &file_menu_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteImageRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"` // สถานะการลบรูป (สำเร็จ/ล้มเหลว)
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	mi := &file_menu_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteImageResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

var File_menu_proto protoreflect.FileDescriptor

var file_menu_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x0c, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd4,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x54,
	0x68, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x68, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x42, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x07, 0x4d,
	0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x3d, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x73, 0x22,
	0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x51, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x41, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x3b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x4e, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x5c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x45, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x45, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75,
	0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x68, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x65, 0x6e,
	0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x65, 0x6e, 0x75, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x13, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x3f, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x47, 0x0a, 0x0c,
	0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49,
	0x4e, 0x5f, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x45,
	0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x53, 0x53,
	0x45, 0x52, 0x54, 0x10, 0x03, 0x2a, 0x22, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x32, 0xe4, 0x0a, 0x0a, 0x0b, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x53, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x53, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x5b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_menu_proto_rawDescOnce sync.Once
	file_menu_proto_rawDescData = file_menu_proto_rawDesc
)

func file_menu_proto_rawDescGZIP() []byte {
	file_menu_proto_rawDescOnce.Do(func() {
		file_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_menu_proto_rawDescData)
	})
	return file_menu_proto_rawDescData
}

var file_menu_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_menu_proto_goTypes = []any{
	(MenuCategory)(0),                 // 0: services.MenuCategory
	(Status)(0),                       // 1: services.Status
	(*MenuItem)(nil),                  // 2: services.MenuItem
	(*MenuItemList)(nil),              // 3: services.MenuItemList
	(*CreateMenuItemRequest)(nil),     // 4: services.CreateMenuItemRequest
	(*CreateMenuItemResponse)(nil),    // 5: services.CreateMenuItemResponse
	(*UpdateMenuItemRequest)(nil),     // 6: services.UpdateMenuItemRequest
	(*UpdateMenuItemResponse)(nil),    // 7: services.UpdateMenuItemResponse
	(*DeleteMenuItemRequest)(nil),     // 8: services.DeleteMenuItemRequest
	(*DeleteMenuItemResponse)(nil),    // 9: services.DeleteMenuItemResponse
	(*GetMenuItemByIdRequest)(nil),    // 10: services.GetMenuItemByIdRequest
	(*MenuSet)(nil),                   // 11: services.MenuSet
	(*MenuSetList)(nil),               // 12: services.MenuSetList
	(*CreateMenuSetRequest)(nil),      // 13: services.CreateMenuSetRequest
	(*CreateMenuSetResponse)(nil),     // 14: services.CreateMenuSetResponse
	(*UpdateMenuSetRequest)(nil),      // 15: services.UpdateMenuSetRequest
	(*UpdateMenuSetResponse)(nil),     // 16: services.UpdateMenuSetResponse
	(*DeleteMenuSetRequest)(nil),      // 17: services.DeleteMenuSetRequest
	(*DeleteMenuSetResponse)(nil),     // 18: services.DeleteMenuSetResponse
	(*GetMenuSetByIdRequest)(nil),     // 19: services.GetMenuSetByIdRequest
	(*CreateMenuSetItemRequest)(nil),  // 20: services.CreateMenuSetItemRequest
	(*CreateMenuSetItemResponse)(nil), // 21: services.CreateMenuSetItemResponse
	(*GetMenuSetItemByIdRequest)(nil), // 22: services.GetMenuSetItemByIdRequest
	(*MenuSetItemList)(nil),           // 23: services.MenuSetItemList
	(*UpdateMenuSetItemRequest)(nil),  // 24: services.UpdateMenuSetItemRequest
	(*UpdateMenuSetItemResponse)(nil), // 25: services.UpdateMenuSetItemResponse
	(*DeleteMenuSetItemRequest)(nil),  // 26: services.DeleteMenuSetItemRequest
	(*DeleteMenuSetItemResponse)(nil), // 27: services.DeleteMenuSetItemResponse
	(*MenuSetItem)(nil),               // 28: services.MenuSetItem
	(*UploadImageRequest)(nil),        // 29: services.UploadImageRequest
	(*UploadImageResponse)(nil),       // 30: services.UploadImageResponse
	(*DeleteImageRequest)(nil),        // 31: services.DeleteImageRequest
	(*DeleteImageResponse)(nil),       // 32: services.DeleteImageResponse
	(*emptypb.Empty)(nil),             // 33: google.protobuf.Empty
}
var file_menu_proto_depIdxs = []int32{
	0,  // 0: services.MenuItem.category:type_name -> services.MenuCategory
	2,  // 1: services.MenuItemList.menu_items:type_name -> services.MenuItem
	0,  // 2: services.CreateMenuItemRequest.category:type_name -> services.MenuCategory
	1,  // 3: services.CreateMenuItemResponse.status:type_name -> services.Status
	0,  // 4: services.UpdateMenuItemRequest.category:type_name -> services.MenuCategory
	1,  // 5: services.UpdateMenuItemResponse.status:type_name -> services.Status
	1,  // 6: services.DeleteMenuItemResponse.status:type_name -> services.Status
	11, // 7: services.MenuSetList.menu_sets:type_name -> services.MenuSet
	1,  // 8: services.CreateMenuSetResponse.status:type_name -> services.Status
	1,  // 9: services.UpdateMenuSetResponse.status:type_name -> services.Status
	1,  // 10: services.DeleteMenuSetResponse.status:type_name -> services.Status
	1,  // 11: services.CreateMenuSetItemResponse.status:type_name -> services.Status
	28, // 12: services.MenuSetItemList.menu_set_items:type_name -> services.MenuSetItem
	1,  // 13: services.UpdateMenuSetItemResponse.status:type_name -> services.Status
	1,  // 14: services.DeleteMenuSetItemResponse.status:type_name -> services.Status
	1,  // 15: services.UploadImageResponse.status:type_name -> services.Status
	1,  // 16: services.DeleteImageResponse.status:type_name -> services.Status
	4,  // 17: services.MenuService.CreateMenuItem:input_type -> services.CreateMenuItemRequest
	6,  // 18: services.MenuService.UpdateMenuItem:input_type -> services.UpdateMenuItemRequest
	8,  // 19: services.MenuService.DeleteMenuItem:input_type -> services.DeleteMenuItemRequest
	33, // 20: services.MenuService.GetMenuItems:input_type -> google.protobuf.Empty
	10, // 21: services.MenuService.GetMenuItemById:input_type -> services.GetMenuItemByIdRequest
	13, // 22: services.MenuService.CreateMenuSet:input_type -> services.CreateMenuSetRequest
	15, // 23: services.MenuService.UpdateMenuSet:input_type -> services.UpdateMenuSetRequest
	17, // 24: services.MenuService.DeleteMenuSet:input_type -> services.DeleteMenuSetRequest
	33, // 25: services.MenuService.GetMenuSets:input_type -> google.protobuf.Empty
	19, // 26: services.MenuService.GetMenuSetById:input_type -> services.GetMenuSetByIdRequest
	20, // 27: services.MenuService.CreateMenuSetItem:input_type -> services.CreateMenuSetItemRequest
	33, // 28: services.MenuService.GetMenuSetItems:input_type -> google.protobuf.Empty
	22, // 29: services.MenuService.GetMenuSetItemByMenuSetID:input_type -> services.GetMenuSetItemByIdRequest
	24, // 30: services.MenuService.UpdateMenuSetItem:input_type -> services.UpdateMenuSetItemRequest
	26, // 31: services.MenuService.DeleteMenuSetItem:input_type -> services.DeleteMenuSetItemRequest
	29, // 32: services.MenuService.UploadImage:input_type -> services.UploadImageRequest
	31, // 33: services.MenuService.DeleteImage:input_type -> services.DeleteImageRequest
	5,  // 34: services.MenuService.CreateMenuItem:output_type -> services.CreateMenuItemResponse
	7,  // 35: services.MenuService.UpdateMenuItem:output_type -> services.UpdateMenuItemResponse
	9,  // 36: services.MenuService.DeleteMenuItem:output_type -> services.DeleteMenuItemResponse
	3,  // 37: services.MenuService.GetMenuItems:output_type -> services.MenuItemList
	2,  // 38: services.MenuService.GetMenuItemById:output_type -> services.MenuItem
	14, // 39: services.MenuService.CreateMenuSet:output_type -> services.CreateMenuSetResponse
	16, // 40: services.MenuService.UpdateMenuSet:output_type -> services.UpdateMenuSetResponse
	18, // 41: services.MenuService.DeleteMenuSet:output_type -> services.DeleteMenuSetResponse
	12, // 42: services.MenuService.GetMenuSets:output_type -> services.MenuSetList
	11, // 43: services.MenuService.GetMenuSetById:output_type -> services.MenuSet
	21, // 44: services.MenuService.CreateMenuSetItem:output_type -> services.CreateMenuSetItemResponse
	23, // 45: services.MenuService.GetMenuSetItems:output_type -> services.MenuSetItemList
	23, // 46: services.MenuService.GetMenuSetItemByMenuSetID:output_type -> services.MenuSetItemList
	25, // 47: services.MenuService.UpdateMenuSetItem:output_type -> services.UpdateMenuSetItemResponse
	27, // 48: services.MenuService.DeleteMenuSetItem:output_type -> services.DeleteMenuSetItemResponse
	30, // 49: services.MenuService.UploadImage:output_type -> services.UploadImageResponse
	32, // 50: services.MenuService.DeleteImage:output_type -> services.DeleteImageResponse
	34, // [34:51] is the sub-list for method output_type
	17, // [17:34] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_menu_proto_init() }
func file_menu_proto_init() {
	if File_menu_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_menu_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_menu_proto_goTypes,
		DependencyIndexes: file_menu_proto_depIdxs,
		EnumInfos:         file_menu_proto_enumTypes,
		MessageInfos:      file_menu_proto_msgTypes,
	}.Build()
	File_menu_proto = out.File
	file_menu_proto_rawDesc = nil
	file_menu_proto_goTypes = nil
	file_menu_proto_depIdxs = nil
}
